#!/bin/bash
# Usage:
#  get-private-ppa ppa:oem-archive/somerville
#  get-private-ppa ppa:oem-archive/sutton
#  get-private-ppa ppa:oem-solutions-group/ppa

eval set -- "$(getopt -o c:gh -l "codename:,generate,help" -- "$@")"

print_manual()
{
    cat <<ENDLINE
Usage:
    $0 [OPTIONS] [PPA] ...
Options:
    --help The manual of this script
    -c|--codename $(lsb_release -cs) by default
    -g|--generate Generate the source list content for /etc/apt/sources.list.d/
Example:
    $0 ppa:oem-solutions-group/ppa -g | tee oem-solutions-group-ubuntu-ppa.list
    $0 ppa:oem-archive/somerville
    $0 ppa:oem-archive/sutton
ENDLINE
}
while :; do
    case "$1" in
        ('-h'|'--help')
            print_manual
            exit;;
        ('-c'|'--codename')
            CODENAME="$2"
            shift 2;;
        ('-g'|'--generate')
            GENERATE=1
            shift;;
        ('--')
            shift
            break;;
    esac
done

[ "$#" = 0 ] && print_manual && exit

CODENAME="${CODENAME:=$(lsb_release -cs)}"
GENERATE="${GENERATE:=}"
LAUNCHPAD_API="${LAUNCHPAD_API:=https://api.launchpad.net/}"

# shellcheck source=config.sh
source /usr/share/oem-scripts/config.sh 2>/dev/null || source config.sh

# Get the path of get-private-ppa, it's same path with lp-api
cur_dir=$(cd "$(dirname "$0")" || exit; pwd)

launchpad_api="${cur_dir}/lp-api"
jq_file=$(command -v jq)
if [ "${jq_file}" = "" ] || [ ! -x "${jq_file}" ]; then
    echo "Please install \`jq\` package!"
    exit 1
fi

if ! valid_oem_scripts_config; then
    echo "Please execute \`lp-api\` to get the token for Launchpad API first."
    exit 1
fi

if ${launchpad_api} get devel/people/+me >/dev/null 2>&1; then
    username=$(${launchpad_api} get devel/people/+me | jq -r .name)
else
    username=
fi

for PPA in "$@"; do
    if [[ "$PPA" =~ ^ppa: ]]; then
        GROUP=$(echo "${PPA//[:\/]/ }" | awk '{print $2}')
        ARCHIVE=$(echo "${PPA//[:\/]/ }" | awk '{print $3}')
        if [ "$(${launchpad_api} get "devel/~$GROUP/+archive/ubuntu/$ARCHIVE" | jq -r .private)" = "true" ]; then
            if [ -z "$username" ]; then
                echo "$PPA is a private PPA. Anonymous users can not access it."
                exit 1
            elif ${launchpad_api} post "devel/~$username" ws.op=getArchiveSubscriptionURL "archive=${LAUNCHPAD_API}devel/~$GROUP/+archive/ubuntu/$ARCHIVE" >/dev/null 2>&1; then
                URL=$(${launchpad_api} post "devel/~$username" ws.op=getArchiveSubscriptionURL "archive=${LAUNCHPAD_API}devel/~$GROUP/+archive/ubuntu/$ARCHIVE" | jq -r .)
            else
                echo "You may not have the subscription of $PPA yet so you can not get the source list."
                echo "Please access https://launchpad.net/~$GROUP/+archive/ubuntu/$ARCHIVE/+subscriptions to subscribe it."
                exit 1
            fi
        else
            URL="http://ppa.launchpad.net/$GROUP/$ARCHIVE/ubuntu"
        fi
        KEY=$(${launchpad_api} get "devel/~$GROUP/+archive/ubuntu/$ARCHIVE" | jq -r .signing_key_fingerprint)
        if [ -n "$GENERATE" ]; then
            echo "# apt-key adv --keyserver keyserver.ubuntu.com --recv-key $KEY"
            echo "deb $URL $CODENAME main"
            echo "deb-src $URL $CODENAME main"
        else
            echo "$GROUP-ubuntu-$ARCHIVE" "$URL" "$KEY"
        fi
    fi
done
